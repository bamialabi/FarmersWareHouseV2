@model Core.DataAccess.tbl_LK_FarmerBenefit

@{
    ViewBag.Title = "Edit";

    <script src="~/Scripts/jquery-1.12.4.min.js"></script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script>

        $(document).ready(function () {
            //Dropdownlist Selectedchange event
            $("#StateID").change(function () {
                $("#CIGID").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCIGName")', // we are calling json method
                    dataType: 'json',
                    data: { id: $("#StateID").val() },
                    success: function (response) {
                        // states contains the JSON formatted list
                        // of states passed from the controller

                        $("#CIGID").append('<option value="' + "0" + '">' + "Select CIG" + '</option>');
                        debugger;
                        $.each(response, function (i, state) {
                            $("#CIGID").append('<option value="' + response.Value + '">' + state.Text + '</option>');
                            // here we are adding option for selected States
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            })
        });
    </script>
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>tbl_LK_FarmerBenefit</h4>
        <hr />
        

        <div class="form-group">
            @Html.LabelFor(model => model.StateID, "StateID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StateID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CIGID, "CIGID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CIGID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CIGID, "", new { @class = "text-danger" })
            </div>
        </div>

        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.FarmerBenefitID)

        <div class="form-group">
            @Html.LabelFor(model => model.FarmerID, "FarmerID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FarmerID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FarmerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductionSeasonID, "ProductionSeasonID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductionSeasonID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductionSeasonID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateIssued, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateIssued, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dateIssued, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
